/**
 *
 * \section COPYRIGHT
 *
 * Copyright 2013-2014 The libLTE Developers. See the
 * COPYRIGHT file at the top-level directory of this distribution.
 *
 * \section LICENSE
 *
 * This file is part of the libLTE library.
 *
 * libLTE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * libLTE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * A copy of the GNU Lesser General Public License can be found in
 * the LICENSE file in the top-level directory of this distribution
 * and at http://www.gnu.org/licenses/.
 *
 */

#define RATE 3
#define TOTALTAIL 12

#define LOG18 -2.07944

#define NUMSTATES 	8
#define NINPUTS 	2
#define TOTALTAIL 	12

#define SCALE 80

#define INF 		9e4
#define ZERO 		9e-4

#define MAX_LONG_CB     6114
#define MAX_LONG_CODED  (RATE*MAX_LONG_CB+TOTALTAIL)

typedef float llr_t;

typedef struct {
	int long_cb;
	int max_iterations;
	int halt_threshold;
	enum { HALT_MIN = 2, HALT_MEAN = 1, HALT_NONE = 0} halt_mode;
	llr_t alfa[NUMSTATES];
	llr_t beta[(MAX_LONG_CB + 1) * NUMSTATES];
	llr_t LLR1[MAX_LONG_CB + TOTALTAIL];
	llr_t LLR2[MAX_LONG_CB + TOTALTAIL];
	llr_t W[MAX_LONG_CB + TOTALTAIL];
	llr_t data[RATE*(MAX_LONG_CB + TOTALTAIL)];
	llr_t *parity;
	struct permute_t permuta;
	int iteration;
	int HALT_min;

}tdec_t;

int tdec_init(tdec_t *h);

int turbo_decoder(tdec_t *h, llr_t *input, char *output, int *halt);

